{"version":3,"sources":["components/Audio/styles.module.scss","features/counter/store/counter.actions.ts","features/counter/store/counter.reducers.ts","features/counter/store/counter.epics.ts","app/App.store.ts","components/Audio/index.tsx","features/home/HomePage.tsx","components/Header.tsx","features/counter/CounterPage.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","increment","createAction","decrement","reset","initialState","value","counterReducer","createReducer","type","state","payload","counterEpics","action$","pipe","ofType","tap","console","log","ignoreElements","rootReducer","combineReducers","counter","rootEpic","combineEpics","epicMiddleware","createEpicMiddleware","store","configureStore","reducer","devTools","process","middleware","run","useAppSelector","useSelector","AudioPlayground","useState","audioSrc","setAudioSrc","audioType","setAudioType","recordingStatus","setRecordingStatus","audioContext","setAudioContext","recorder","setRecorder","audioData","setAudioData","samples","audioEl","useRef","canvasEl","initRecorder","a","device","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","AudioContext","startRecording","undefined","error","ondataavailable","e","items","push","data","blob","Blob","URL","createObjectURL","arrayBuffer","then","decodeAudioData","audioBuffer","initAudioBuffer","start","buffer","rawData","getChannelData","blockSize","Math","floor","length","filteredData","i","blockStart","sum","j","abs","setTimeout","draw","current","canvas","dpr","window","devicePixelRatio","width","offsetWidth","height","offsetHeight","padding","ctx","getContext","scale","translate","multiplier","pow","max","map","n","normalizeData","x","drawLineSegment","y","isEven","lineWidth","strokeStyle","beginPath","moveTo","lineTo","arc","PI","stroke","onClick","pause","resume","stop","ref","controls","src","className","styles","HomePage","Header","to","CounterPage","dispatch","useDispatch","App","basename","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ae8724.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"styles_canvas__2Mk7O\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const increment = createAction<{ value: number }>('counter/increment');\nexport const decrement = createAction<{ value: number }>('counter/decrement');\nexport const reset = createAction('counter/reset');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { decrement, increment, reset } from './counter.actions';\n\nexport interface CounterState {\n  value: number;\n}\n\nexport const initialState: CounterState = {\n  value: 0\n};\n\nexport const counterReducer = createReducer<CounterState>(initialState, {\n  [increment.type]: (state, { payload: { value } }) => ({ ...state, value: state.value + value }),\n  [decrement.type]: (state, { payload: { value } }) => ({ ...state, value: state.value - value }),\n  [reset.type]: (state) => ({ ...state, value: initialState.value }),\n});\n","import { Epic, ofType } from 'redux-observable';\nimport { ignoreElements, tap } from 'rxjs';\nimport { increment } from './counter.actions';\n\nexport const incrementEpic: Epic = action$ => action$.pipe(\n  ofType(increment.type),\n  tap(({ type, payload }) => console.log('This log is triggered only by increment action thanks to epics :)')),\n  ignoreElements() // This line prevents loop\n);\n\n\nexport const counterEpics = [incrementEpic];\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\n\nimport { counterReducer } from '../features/counter/store/counter.reducers';\nimport { counterEpics } from '../features/counter/store/counter.epics';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer\n});\n\nexport const rootEpic = combineEpics(\n  ...counterEpics,\n);\nconst epicMiddleware = createEpicMiddleware();\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: [epicMiddleware]\n});\nepicMiddleware.run(rootEpic);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useRef, useState } from 'react';\nimport styles from './styles.module.scss';\n\nexport const AudioPlayground = (): React.ReactElement => {\n  const [audioSrc, setAudioSrc] = useState<string | null>(null);\n  const [audioType, setAudioType] = useState<string | undefined>();\n  const [recordingStatus, setRecordingStatus] = useState<'recording' | 'paused' | 'stopped'>('stopped');\n  const [audioContext, setAudioContext] = useState<AudioContext>();\n  const [recorder, setRecorder] = useState<MediaRecorder>();\n  const [audioData, setAudioData] = useState<Array<number>>();\n  const [samples] = useState(100); // Number of samples we want to have in our final data set\n\n  const audioEl = useRef<HTMLAudioElement | null>(null);\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n\n  const initRecorder = async () => {\n    const device = navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n\n    const stream = await device;\n    setRecorder(new MediaRecorder(stream));\n    setAudioContext(new AudioContext());\n  };\n\n  //region RECORDINGS\n  const startRecording = async () => {\n    setAudioSrc(null);\n    setAudioData(undefined);\n    if(!recorder) {\n      console.error('Recorder not init');\n      await initRecorder();\n      if(!recorder) {\n        return;\n      }\n    }\n\n    recorder.ondataavailable = e => {\n      if(recorder.state === 'inactive') {\n        const items: BlobPart[] = [];\n        items.push(e.data);\n        const blob = new Blob(items, { type: e.data.type });\n        setAudioSrc(URL.createObjectURL(blob));\n        setAudioType(e.data.type);\n\n        if(!audioContext) {\n          console.log('No AudioContext');\n          return;\n        }\n        // Create AudioBuffer from Blob\n        blob.arrayBuffer()\n          .then(arrayBuffer => audioContext.decodeAudioData(arrayBuffer))\n          .then(audioBuffer => {\n            console.log({ audioBuffer });\n            initAudioBuffer(audioBuffer);\n          });\n      }\n    };\n\n    console.log('START recording...');\n    recorder.start();\n    setRecordingStatus('recording');\n  };\n  const stopRecording = () => {\n    console.log('STOP recording...');\n    if(!recorder) {\n      return;\n    }\n    recorder.stop();\n    setRecordingStatus('stopped');\n  };\n  const pauseRecording = () => {\n    if(!recorder) {\n      return;\n    }\n    recorder.pause();\n    setRecordingStatus('paused');\n  };\n  const resumeRecording = () => {\n    if(!recorder) {\n      return;\n    }\n    recorder.resume();\n    setRecordingStatus('recording');\n  };\n  //endregion\n\n  //region AUDIO MANIPULATION\n  const initAudioBuffer = (buffer: AudioBuffer) => {\n    if(!buffer) {\n      console.error('No AudioBuffer');\n      return;\n    }\n    const rawData = buffer.getChannelData(0); // We only need to work with one channel of data\n    const blockSize = Math.floor(rawData.length / samples); // the number of samples in each subdivision\n    const filteredData: Array<number> = [];\n    for(let i = 0; i < samples; i++) {\n      let blockStart = blockSize * i; // the location of the first sample in the block\n      let sum = 0;\n      for(let j = 0; j < blockSize; j++) {\n        sum = sum + Math.abs(rawData[blockStart + j]); // find the sum of all the samples in the block\n      }\n      filteredData.push(sum / blockSize); // divide the sum by the block size to get the average\n    }\n    console.log({ filteredData });\n    setAudioData(filteredData);\n    setTimeout(() => draw(filteredData), 0);\n  };\n\n  const normalizeData = (filteredData: Array<number>) => {\n    const multiplier = Math.pow(Math.max(...filteredData), -1);\n    return filteredData.map(n => n * multiplier);\n  };\n\n  const draw = (data: Array<number> | undefined) => {\n\n    if(!canvasEl?.current) {\n      console.error('No canvas HTML element');\n      return;\n    }\n\n    if(!data) {\n      console.error('No audio data');\n      return;\n    }\n    // Set up the canvas\n    const canvas: HTMLCanvasElement = canvasEl.current;\n    const dpr = window.devicePixelRatio || 1;\n    const padding = 20;\n    canvas.width = canvas.offsetWidth * dpr;\n    canvas.height = (canvas.offsetHeight + padding * 2) * dpr;\n    const ctx = canvas.getContext('2d');\n    if(!ctx) {\n      console.error('No canvas context');\n      return;\n    }\n    ctx.scale(dpr, dpr);\n    ctx.translate(0, canvas.offsetHeight / 2 + padding); // Set Y = 0 to be in the middle of the canvas\n\n    // Normalize data if needed\n    data = normalizeData(data);\n\n    // draw the line segments\n    const width = canvas.offsetWidth / data.length;\n    for(let i = 0; i < data.length; i++) {\n      const x = width * i;\n      let height = data[i] * canvas.offsetHeight - padding;\n      if(height < 0) {\n        height = 0;\n      } else if(height > canvas.offsetHeight / 2) {\n        // height = height > canvas.offsetHeight / 2;\n        height = canvas.offsetHeight / 2;\n      }\n      drawLineSegment(ctx, x, height, width, !!((i + 1) % 2));\n    }\n  };\n\n  const drawLineSegment = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, isEven: boolean) => {\n    ctx.lineWidth = 1; // how thick the line is\n    ctx.strokeStyle = '#fff'; // what color our line is\n    ctx.beginPath();\n    y = isEven ? y : -y;\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, y);\n    ctx.arc(x + width / 2, y, width / 2, Math.PI, 0, isEven);\n    ctx.lineTo(x + width, 0);\n    ctx.stroke();\n  };\n  //region\n\n  // useEffect(() => {\n  //   initRecorder().then(() => console.log('Recorder initialized'));\n  // }, []);\n\n  return (\n    <div>\n      <h1>Welcome to Audio Browser API Playground</h1>\n\n      { !recorder && <button onClick={ initRecorder }>Activate recorder</button> }\n\n      { recorder &&\n        <div>\n\n          { recordingStatus === 'stopped' && <button onClick={ startRecording }>Rec</button> }\n\n          { recordingStatus === 'recording' && <button onClick={ pauseRecording }>Pause</button> }\n\n          { recordingStatus === 'paused' && <button onClick={ resumeRecording }>Resume</button> }\n\n          { (recordingStatus === 'recording' || recordingStatus === 'paused') &&\n            <button onClick={ stopRecording }>Stop</button> }\n          &nbsp;\n          <span> Status: { recordingStatus }</span>\n\n        </div>\n\n      }\n\n      {\n        audioSrc &&\n        <div>\n          <audio ref={ audioEl } controls>\n            <source src={ audioSrc } type={ audioType }/>\n          </audio>\n        </div>\n      }\n\n      { audioData && <canvas ref={ canvasEl } className={ styles.canvas }/> }\n\n    </div>\n  );\n};\n","import React from 'react';\nimport { AudioPlayground } from '../../components/Audio';\n\nexport const HomePage: React.VFC = () => <>\n  <AudioPlayground/>\n</>;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Header: React.VFC = () => <ul>\n  <li><Link to=\"/\">Home</Link></li>\n  <li><Link to=\"counter\">Counter</Link></li>\n</ul>;\n","import React from 'react';\nimport { decrement, increment, reset } from './store/counter.actions';\nimport { useAppDispatch, useAppSelector } from '../../app/App.store';\n\nexport const CounterPage: React.VFC = () => {\n\n  const dispatch = useAppDispatch();\n  const counter = useAppSelector(state => state.counter.value);\n\n  return (\n    <div>\n      <h1>Counter Page { counter }</h1>\n      <button onClick={ () => dispatch(decrement({ value: 1 })) }>-</button>\n      <button onClick={ () => dispatch(reset()) }>reset</button>\n      <button onClick={ () => dispatch(increment({ value: 1 })) }>+</button>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport 'normalize.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './App.store';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { HomePage } from '../features/home/HomePage';\nimport { Header } from '../components/Header';\nimport { CounterPage } from '../features/counter/CounterPage';\n\nfunction App() {\n  return (\n    <Provider store={ store }>\n      <BrowserRouter basename={ process.env.PUBLIC_URL }>\n        <Header/>\n        <Routes>\n          <Route path=\"/\" element={ <HomePage/> }/>\n          <Route path=\"counter\" element={ <CounterPage/> }/>\n        </Routes>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}